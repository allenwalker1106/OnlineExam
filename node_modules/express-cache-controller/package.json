{
  "_from": "express-cache-controller",
  "_id": "express-cache-controller@1.1.0",
  "_inBundle": false,
  "_integrity": "sha512-aRGah9AdVUqyChcFjbL03SVW0c6siE871wzMRuXxCONzYiBDmUtGFEnzZP1ABM6nCo3ovnKPntFRFzAxGqmWtw==",
  "_location": "/express-cache-controller",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "express-cache-controller",
    "fetchSpec": "latest",
    "name": "express-cache-controller",
    "raw": "express-cache-controller",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/express-cache-controller/-/express-cache-controller-1.1.0.tgz",
  "_shasum": "fa8f02e0ec40374ce552522526b6aab883c76048",
  "_spec": "express-cache-controller",
  "_where": "/home/classes/Desktop/OnlineExam",
  "author": {
    "name": "Christopher Sidebottom"
  },
  "bugs": {
    "url": "https://github.com/DaMouse404/express-cache-controller/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "lodash.isnumber": "^3.0.3",
    "on-headers": "^1.0.1"
  },
  "deprecated": false,
  "description": "Middleware for meddling with Cache-Control headers",
  "devDependencies": {
    "eslint": "^3.1.1",
    "express": "^4.13.4",
    "istanbul": "^0.4.3",
    "mocha": "^3.0.2",
    "supertest": "^2.0.0"
  },
  "homepage": "https://github.com/DaMouse404/express-cache-controller#readme",
  "keywords": [
    "cache",
    "cache-control",
    "express",
    "max-age",
    "maxage",
    "no-cache"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "express-cache-controller",
  "optionalDependencies": {},
  "readme": "# express-cache-controller\n\nA simple and lightweight module for managing cache control headers from within your application. It also tries to provide a simple set of rules for common use cases such as setting 'max-age=0' when 'no-cache' is present by default.\n\n## Example\nConfiguring noCache easily:\n```js\napp.use(cacheControl({\n  noCache: true\n}));\n```\nCreates a cache-control header of `no-cache, max-age=0`\n\n## Usage\nTo start using cacheControl, just use the middleware in your application:\n```js\napp.use(cacheControl());\n```\n\n### Default Cache Headers\nWhen initialising the middleware you can set default options when you use it in your application:\n```js\napp.use(cacheControl({\n    maxAge: 5\n}));\n```\n\n### Overriding Defaults\nJust set the cacheControl property of the response object after the cacheControl() middleware is loaded:\n```js\napp.use(cacheControl({ maxAge: 60 }));\napp.get('/', function (req, res, next){\n  res.cacheControl = {\n      maxAge: 30\n  };\n\n  res.send('hai');\n});\n```\n\nThis is useful in error conditions where you can setup cache headers before and after a request is processed:\n```js\napp.use(cacheControl({ maxAge: 60} ));\napp.get('/', function (req, res, next) {\n  next(Error('BOOM!'));\n});\napp.use(function (err, req, res, next) {\n  res.cacheControl = {\n      maxAge: 5\n  };\n\n  res.status(500).send('oh no!');\n});\n```\n\n## Options\nName | Value | Description\n----|----|---\nprivate | Boolean | Adds 'private' flag, overrides 'public' option\npublic | Boolean | Adds 'public' flag\nnoStore | Boolean | Adds 'no-store' flag and includes noCache\nnoCache | Boolean | Adds 'no-cache' flag, sets maxAge to 0 and removes sMaxAge, staleIfError and staleWhileRevalidate\nnoTransform | Boolean | Adds 'no-transform' flag\nmustRevalidate | Boolean | Adds 'must-revalidate' flag and removes staleIfError and staleWhileRevalidate\nstaleIfError | Number | Adds 'stale-if-error=%d' flag\nstaleWhileRevalidate | Number | Adds 'stale-while-revalidate=%d' flag\nmaxAge | Number | Adds 'max-age=%d' flag\nsMaxAge | Number | Adds 's-maxage=%d' flag\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/DaMouse404/express-cache-controller.git"
  },
  "scripts": {
    "coverage": "istanbul cover _mocha -- -R dot",
    "lint": "eslint .",
    "test": "mocha"
  },
  "version": "1.1.0"
}
